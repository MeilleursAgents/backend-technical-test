name: Test Image execution on OS

on:
  # run it on push to the default repository branch
  push:
    branches: [master]
  pull_request:
  # Only trigger, when the build workflow succeeded
  # workflow_run:
  #   workflows: [ "Deploy Application images when Merging on Master" ]
  #   types: [completed]

env:
  LISTINGAPI_ENDPOINT: "http://localhost:8181/listings/32682"
  PRICEMAP_PYTHON_ENDPOINT: "http://localhost:8080"
  PRICEMAP_TYPESCRIPT_ENDPOINT: "http://localhost:8080"

jobs:
  build:
    name: Test containers execution
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start containers
        run: make run

      - name: Display running containers
        run: |
          docker ps -a
          docker network ls

      - name: Check listingAPI availability
        run: |
          response=$(mktemp /tmp/listingAPI_response.XXXX)
          code=$(curl --silent -o $response -w "%{http_code}" "${{ env.LISTINGAPI_ENDPOINT }}")
          apiResponseCount=$(cat $response | jq length)
          # see https://github.com/stedolan/jq
          if [ $code -eq 200 ] && [ $apiResponseCount -eq 20 ]; then
              echo "listingAPI Call on ${{ env.LISTINGAPI_ENDPOINT }} is OK! ðŸŽ‰";
          else
              echo "listingAPI returns a wrong status code ($code) or a wrong listings count ($apiResponseCount)";
          fi
          rm $response

      - name: Check pricemap Python availability
        run: |
          sleep 20
          docker ps -a 
          curl "http://localhost:8080/" -vvv

      #- name: Check pricemap Python availability
      #  run: |
      #    response=$(mktemp /tmp/pricemap_python_response.XXXX)
      #    code=$(curl -o $response -w "%{http_code}"  ${{ env.PRICEMAP_PYTHON_ENDPOINT }})
      #    cat $response
      #    if [ $code -eq 200 ]; then
      #        echo "pricemap python Call on ${{ env.PRICEMAP_PYTHON_ENDPOINT }} is OK! ðŸŽ‰";
      #    else
      #        echo "pricemap python returns a wrong status code ($code)";
      #    fi
      #    rm $response
#
      #- name: Check pricemap typescript availability
      #  run: |
      #    response=$(mktemp /tmp/pricemap_typescript_response.XXXX)
      #    code=$(curl --silent -o $response -w "%{http_code}" "${{ env.PRICEMAP_TYPESCRIPT_ENDPOINT }}")
      #    cat $response
      #    if [ $code -eq 200 ]; then
      #        echo "pricemap python Call on ${{ env.PRICEMAP_TYPESCRIPT_ENDPOINTg }} is OK! ðŸŽ‰";
      #    else
      #        echo "pricemap python returns a wrong status code ($code)";
      #    fi
      #    rm $response
#
